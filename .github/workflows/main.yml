name: Build APK

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      # Setup JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Make gradlew executable
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build APK
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # Đổi tên file APK thành doki-<6 ký tự ngẫu nhiên>.apk
      - name: Rename APK
        run: |
          cd app/build/outputs/apk/debug
          NEW_NAME="doki-$(head /dev/urandom | tr -dc a-z0-9 | head -c 6).apk"
          mv app-debug.apk "$NEW_NAME"
          echo "APK_NAME=$NEW_NAME" >> $GITHUB_ENV

      # Xóa file APK cũ trong release 'latest' (nếu tồn tại)
      - name: Delete old asset
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          # Nếu release 'latest' tồn tại, tìm và xóa asset cũ
          RELEASE_ID=$(gh release view latest --json id --jq '.id' || echo "")
          if [ -n "$RELEASE_ID" ]; then
            ASSET_IDS=$(gh release view latest --json assets --jq '.assets[].id' || echo "")
            for ID in $ASSET_IDS; do
              gh api --method DELETE repos/${{ github.repository }}/releases/assets/$ID || true
            done
          fi

      # Upload file mới lên release 'latest'
      - name: Upload APK to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Build
          files: app/build/outputs/apk/debug/${{ env.APK_NAME }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
